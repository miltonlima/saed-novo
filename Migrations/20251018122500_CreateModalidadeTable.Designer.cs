// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcMovie.Data;

#nullable disable

namespace MvcMovie.Migrations
{
    [DbContext(typeof(MvcMovieContext))]
    [Migration("20251018122500_CreateModalidadeTable")]
    partial class CreateModalidadeTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MvcMovie.Models.Modalidade", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<int?>("TurmaId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("TurmaId")
                    .HasDatabaseName("IX_Modalidade_TurmaId");

                b.ToTable("modalidade");
            });

            modelBuilder.Entity("MvcMovie.Models.Turma", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                // ... outras propriedades da Turma ...

                b.HasKey("Id");

                b.ToTable("turma");
            });

            modelBuilder.Entity("MvcMovie.Models.Modalidade", b =>
            {
                b.HasOne("MvcMovie.Models.Turma", null)
                    .WithMany()
                    .HasForeignKey("TurmaId")
                    .OnDelete(DeleteBehavior.SetNull);
            });
        }
    }
}