// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcMovie.Data;

#nullable disable

namespace MvcMovie.Migrations
{
    [DbContext(typeof(MvcMovieContext))]
    [Migration("20251018124500_CreateModalidadeTurmaTable")]
    partial class CreateModalidadeTurmaTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MvcMovie.Models.Modalidade", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("varchar(100)");

                b.HasKey("Id");

                b.ToTable("modalidade");
            });

            modelBuilder.Entity("MvcMovie.Models.ModalidadeTurma", b =>
            {
                b.Property<int>("ModalidadeId")
                    .HasColumnType("int");

                b.Property<int>("TurmaId")
                    .HasColumnType("int");

                b.HasKey("ModalidadeId", "TurmaId");

                b.HasIndex("TurmaId");

                b.ToTable("modalidade_turma", (string)null);
            });

            modelBuilder.Entity("MvcMovie.Models.Turma", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<DateTime>("DataCriacao")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime(6)")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP");

                b.Property<DateTime>("DataFim")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime>("DataInicio")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("varchar(100)");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("turma");
            });

            modelBuilder.Entity("MvcMovie.Models.ModalidadeTurma", b =>
            {
                b.HasOne("MvcMovie.Models.Modalidade", "Modalidade")
                    .WithMany("ModalidadesTurmas")
                    .HasForeignKey("ModalidadeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MvcMovie.Models.Turma", "Turma")
                    .WithMany("ModalidadesTurmas")
                    .HasForeignKey("TurmaId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Modalidade");
                b.Navigation("Turma");
            });

            modelBuilder.Entity("MvcMovie.Models.Modalidade", b =>
            {
                b.Navigation("ModalidadesTurmas");
            });

            modelBuilder.Entity("MvcMovie.Models.Turma", b =>
            {
                b.Navigation("ModalidadesTurmas");
            });
        }
    }
}